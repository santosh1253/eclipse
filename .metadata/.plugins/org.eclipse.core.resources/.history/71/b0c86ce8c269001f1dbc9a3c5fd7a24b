package mydemo.hb;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

import mydemo.hb.entity.Company;
import mydemo.hb.entity.Employee;

public class ManyToOneApp {

	public static void main(String[] args) {
		StandardServiceRegistry ssr = new StandardServiceRegistryBuilder().configure("myconfig.hbm.xml").build();
		Metadata meta = new MetadataSources(ssr).getMetadataBuilder().build();
		SessionFactory factory = meta.getSessionFactoryBuilder().build();
		Session ses = factory.openSession();
		Transaction tr =null;
		Company c=new Company();
		c.setAddress("Hyderabad");
		c.setCname("DivyaSree");
		c.setRegno(105);
		Employee e1=new Employee();
		e1.setCompany(c);
		e1.setEmpId(9);
		e1.setEmpname("Sneha");
		Employee e2=new Employee();
		e2.setCompany(c);
		e2.setEmpId(8);
		e2.setEmpname("Raju");
		System.out.println(c);
		System.out.println(e1+" "+e2);
		try
        {
            tr = ses.beginTransaction();
            ses.save(c);
            ses.save(e1);
            ses.save(e2);
            tr.commit();
            System.out.println("Company and employees saved successfully");
            
        }
        catch(Exception e)
        {
        	tr.rollback();
        	System.out.println("Not saved try again");
        	
        }
		
	}
	/*create table Company (
		       regno integer not null,
		        address varchar(255),
		        cname varchar(255),
		        primary key (regno)
		    ) engine=InnoDB
		Hibernate: 
		    
		    create table Employee (
		       empId integer not null,
		        empname varchar(255),
		        regno integer,
		        primary key (empId)
		    ) engine=InnoDB
		Hibernate: 
		    
		    alter table Employee 
		       add constraint FK3cg1qy0g3y89aotr66cx3ybxn 
		       foreign key (regno) 
		       references Company (regno)*/
}
